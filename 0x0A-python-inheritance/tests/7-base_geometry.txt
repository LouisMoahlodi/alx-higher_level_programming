Test for 7-base_geometry.py
-------------------------------------------

case 0: Importing the function from the module
>>> BaseGeometry = __import__("7-base_geometry").BaseGeometry
>>>

case 1: Checking for module docstring
>>> m = __import__("7-base_geometry").__doc__
>>> len(m) > 1
True

case 2: Checking for class docstring
>>> c = __import__("7-base_geometry").BaseGeometry.__doc__
>>> len(c) > 1
True

case 3: Checking for method docstring
>>> mod1 = __import__("7-base_geometry").BaseGeometry.area.__doc__
>>> len(mod1) > 1
True
>>> mod2 = __import__("7-base_geometry").BaseGeometry.integer_validator.__doc__
>>> len(mod2) > 1
True

-------------------------------------------

case 4: common case
>>> bg = BaseGeometry()
>>> try:
...     bg.area()
... except Exception as e:
...     print(f"Traceback (most recent call last):\n\t  ...\n{type(e).__name__}: {e}")
Traceback (most recent call last):
	  ...
Exception: area() is not implemented

-------------------------------------------

case 5: integer_validator()
>>> bg = BaseGeometry()
>>> try:
...     bg.integer_validator("name", 5)
... except Exception as e:
...     print(f"Traceback (most recent call last):\n\t  ...\n{type(e).__name__}: {e}")
Traceback (most recent call last):
	  ...
TypeError: name must be an integer

-------------------------------------------

case 6: integer_validator("age")
>>> bg = BaseGeometry()
>>> try:
...     bg.integer_validator("age")
... except Exception as e:
...     print(f"Traceback (most recent call last):\n\t  ...\n{type(e).__name__}: {e}")
Traceback (most recent call last):
	  ...
TypeError: integer_validator() missing 1 required positional argument: 'value'

-------------------------------------------

case 7: integer_validator("age", 1)
>>> bg = BaseGeometry()
>>> try:
...     bg.integer_validator("age", 1)
... except Exception as e:
...     print(f"Traceback (most recent call last):\n\t  ...\n{type(e).__name__}: {e}")
Traceback (most recent call last):
	  ...
TypeError: integer_validator() takes 2 positional arguments but 3 were given

-------------------------------------------

case 8: integer_validator("age", 0)
>>> bg = BaseGeometry()
>>> try:
...     bg.integer_validator("age", 0)
... except Exception as e:
...     print(f"Traceback (most recent call last):\n\t  ...\n{type(e).__name__}: {e}")
Traceback (most recent call last):
	  ...
ValueError: age must be greater than 0

-------------------------------------------

case 9: integer_validator("age", -4)
>>> bg = BaseGeometry()
>>> try:
...     bg.integer_validator("age", -4)
... except Exception as e:
...     print(f"Traceback (most recent call last):\n\t  ...\n{type(e).__name__}: {e}")
Traceback (most recent call last):
	  ...
ValueError: age must be greater than 0

-------------------------------------------

case 10: integer_validator("age", "4")
>>> bg = BaseGeometry()
>>> try:
...     bg.integer_validator("age", "4")
... except Exception as e:
...     print(f"Traceback (most recent call last):\n\t  ...\n{type(e).__name__}: {e}")
Traceback (most recent call last):
	  ...
TypeError: age must be an integer

-------------------------------------------

case 11: integer_validator("age", (4,))
>>> bg = BaseGeometry()
>>> try:
...     bg.integer_validator("age", (4,))
... except Exception as e:
...     print(f"Traceback (most recent call last):\n\t  ...\n{type(e).__name__}: {e}")
Traceback (most recent call last):
	  ...
TypeError: age must be an integer

-------------------------------------------

case 12: integer_validator("age", [3])
>>> bg = BaseGeometry()
>>> try:
...     bg.integer_validator("age", [3])
... except Exception as e:
...     print(f"Traceback (most recent call last):\n\t  ...\n{type(e).__name__}: {e}")
Traceback (most recent call last):
	  ...
TypeError: age must be an integer

-------------------------------------------

case 13: integer_validator("age", True)
>>> bg = BaseGeometry()
>>> try:
...     bg.integer_validator("age", True)
... except Exception as e:
...     print(f"Traceback (most recent call last):\n\t  ...\n{type(e).__name__}: {e}")
Trace

back (most recent call last):
	  ...
TypeError: age must be an integer

-------------------------------------------

case 14: integer_validator("age", {3, 4})
>>> bg = BaseGeometry()
>>> try:
...     bg.integer_validator("age", {3, 4})
... except Exception as e:
...     print(f"Traceback (most recent call last):\n\t  ...\n{type(e).__name__}: {e}")
Traceback (most recent call last):
	  ...
TypeError: age must be an integer

-------------------------------------------

case 15: integer_validator("age", None)
>>> bg = BaseGeometry()
>>> try:
...     bg.integer_validator("age", None)
... except Exception as e:
...     print(f"Traceback (most recent call last):\n\t  ...\n{type(e).__name__}: {e}")
Traceback (most recent call last):
	  ...
TypeError: age must be an integer

-------------------------------------------

case 16: Instantiation
>>> bg = BaseGeometry()
>>> print(bg)
Traceback (most recent call last):
	  ...
AttributeError: 'BaseGeometry' object has no attribute '__str__'