The ``2-matrix_divided`` module
============================

Using ``matrix_divided``
----------------------

Importing function from module:
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# Test Case 1: Integer matrix division
>>> matrix_divided([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 2)
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0], [3.5, 4.0, 4.5]]

# Test Case 2: Float matrix division
>>> matrix_divided([[1.5, 2.5], [3.5, 4.5], [5.5, 6.5]], 2.0)
[[0.75, 1.25], [1.75, 2.25], [2.75, 3.25]]

# Test Case 3: Division by 1
>>> matrix_divided([[1, 2], [3, 4]], 1)
[[1.0, 2.0], [3.0, 4.0]]

# Test Case 4: Division by 0
>>> matrix_divided([[1, 2], [3, 4]], 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

# Test Case 5: Non-numeric divisor
>>> matrix_divided([[1, 2], [3, 4]], '2')
Traceback (most recent call last):
...
TypeError: div must be a number

# Test Case 6: Non-numeric matrix element
>>> matrix_divided([[1, 2], [3, '4']], 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test Case 7: Matrix with rows of different sizes
>>> matrix_divided([[1, 2, 3], [4, 5], [6, 7, 8]], 2)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size
